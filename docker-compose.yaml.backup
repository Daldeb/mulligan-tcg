version: '3.8'

services:
  # NGINX - Reverse proxy + Static files
  nginx:
    image: nginx:alpine
    container_name: tcg_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/sites:/etc/nginx/conf.d:ro
      - ./frontend/dist:/var/www/frontend:ro
      - ./backend/public:/var/www/backend:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      app:
        condition: service_healthy
      frontend:
        condition: service_completed_successfully
    networks:
      - tcg_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # SYMFONY API
  app:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    container_name: tcg_app
    working_dir: /var/www/backend
    volumes:
      - ./backend:/var/www/backend
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/custom.ini
    environment:
      - APP_ENV=prod
      - DATABASE_URL=mysql://tcg_user:tcg_password@mysql:3306/tcg_db
      - REDIS_URL=redis://redis:6379
      - MAPPY_API_KEY=${MAPPY_API_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - tcg_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "php", "-v"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 60s

  # VUE.JS Frontend Builder
  frontend:
    build:
      context: .
      dockerfile: ./docker/node/Dockerfile
    container_name: tcg_frontend
    working_dir: /var/www/frontend
    volumes:
      - ./frontend:/var/www/frontend
      - /var/www/frontend/node_modules
    environment:
      - NODE_ENV=production
      - VUE_APP_API_URL=${VUE_APP_API_URL:-http://localhost/api}
    command: sh -c "npm ci && npm run build && tail -f /dev/null"
    networks:
      - tcg_network

  # MYSQL Database
  mysql:
    image: mysql:8.0
    container_name: tcg_mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root_password
      - MYSQL_DATABASE=tcg_db
      - MYSQL_USER=tcg_user
      - MYSQL_PASSWORD=tcg_password
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/custom.cnf
    networks:
      - tcg_network
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "tcg_user", "-ptcg_password"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # REDIS Cache & Sessions
  redis:
    image: redis:7-alpine
    container_name: tcg_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/etc/redis/redis.conf
    command: redis-server /etc/redis/redis.conf
    networks:
      - tcg_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # PHPMYADMIN (Development)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: tcg_phpmyadmin
    ports:
      - "8080:80"
    environment:
      - PMA_HOST=mysql
      - PMA_USER=tcg_user
      - PMA_PASSWORD=tcg_password
    depends_on:
      - mysql
    networks:
      - tcg_network
    restart: unless-stopped
    profiles:
      - dev

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  tcg_network:
    driver: bridge
